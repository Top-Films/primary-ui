name: Deploy Top Films UI

on:
  push:
    branches: [ 'main' ]

env:
  PROJECT_NAME: topfilms
  APP_NAME: primary-ui
  APP_VERSION: 1.0.0

jobs:
  build_test:
    runs-on: ubuntu-latest
    name: Build and Test Application
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v3

    - name: Build Application
      uses: actions/setup-node@v3
      with:
        node-version: '20.10.0'
    - run: npm install
    - run: npm run test
    - run: npm run build

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}
        path: dist

  deploy:
    needs: build_test
    runs-on: ubuntu-latest
    name: Upload Artifacts and Deploy Application
    steps:
    - name: Checkout Branch
      uses: actions/checkout@v3

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}
        path: dist

    - name: Build and Push Docker Image
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT_NAME}}-${{ env.APP_NAME }}:${{ env.APP_VERSION }} --platform linux/arm64
    - run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT_NAME}}-${{ env.APP_NAME }}:${{ env.APP_VERSION }}

    - name: Package Push and Deploy Helm Chart
      uses: WyriHaximus/github-action-helm3@v3
      with:
        exec: |
          helm registry login 'registry-1.docker.io' --username '${{ secrets.DOCKER_USERNAME }}' --password '${{ secrets.DOCKER_PASSWORD }}' && \
          helm package helm/${{ env.APP_NAME }} && \
          helm push ./${{ env.APP_NAME }}-${{ env.APP_VERSION }}.tgz oci://registry-1.docker.io/${{ secrets.DOCKER_USERNAME }} && \
          helm upgrade ${{ env.APP_NAME }} ./${{ env.APP_NAME }}-${{ env.APP_VERSION }}.tgz --install --atomic --debug --history-max=3
        kubeconfig: ${{ secrets.KUBE_CONFIG }}